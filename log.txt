
n = 15000 elastic_constants_time
BenchmarkTools.Trial: 1 sample with 1 evaluation per sample.
 Single result which took 285.971 s (9.17% GC) to evaluate,
 with a memory estimate of 148.79 GiB, over 1826717930 allocations.

BenchmarkTools.Trial: 1 sample with 1 evaluation per sample.
 Single result which took 304.565 s (9.44% GC) to evaluate,
 with a memory estimate of 148.79 GiB, over 1826708337 allocations.

after @view change
no increase in speed, but memory estimate got reduced
BenchmarkTools.Trial: 1 sample with 1 evaluation per sample.
 Single result which took 294.183 s (8.90% GC) to evaluate,
 with a memory estimate of 143.67 GiB, over 1826632137 allocations.

after inv() call moved outside of for loop
almost cut in half in time and memory estimate reduced
BenchmarkTools.Trial: 1 sample with 1 evaluation per sample.
 Single result which took 170.339 s (16.79% GC) to evaluate,
 with a memory estimate of 128.38 GiB, over 1598677135 allocations.

after StaticArrays change
speed cut more and memory estimate further reduced
BenchmarkTools.Trial: 1 sample with 1 evaluation per sample.
 Single result which took 47.524 s (15.99% GC) to evaluate,
 with a memory estimate of 40.05 GiB, over 116729639 allocations.

full change of StaticArrays
forgot to move I3 call into for-loop
allocations further reduced, speed is still about the same
BenchmarkTools.Trial: 1 sample with 1 evaluation per sample.
 Single result which took 41.113 s (15.08% GC) to evaluate,
 with a memory estimate of 36.65 GiB, over 2752139 allocations.
BenchmarkTools.Trial: 1 sample with 1 evaluation per sample.
 Single result which took 46.647 s (16.02% GC) to evaluate,
 with a memory estimate of 36.65 GiB, over 2752137 allocations.

adjusted compliances_from_fluctuations to work in buffers and avoid allocation
increased speed and reduced allocs to MiBs
BenchmarkTools.Trial: 2 samples with 1 evaluation per sample.
 Range (min … max):  3.327 s …    4.084 s  ┊ GC (min … max): 0.26% … 0.00%
 Time  (median):     3.705 s               ┊ GC (median):    0.11%
 Time  (mean ± σ):   3.705 s ± 534.712 ms  ┊ GC (mean ± σ):  0.11% ± 0.18%
 Memory estimate: 55.29 MiB, allocs estimate: 630874.


n = 100000 -- stress test of larger lattice running averages
before changes this took about 55-65 mins
after StaticArrays change
BenchmarkTools.Trial: 1 sample with 1 evaluation per sample.
 Single result which took 983.397 s (11.86% GC) to evaluate,
 with a memory estimate of 1050.63 GiB, over 10313381 allocations.

after buffer allocation change
BenchmarkTools.Trial: 1 sample with 1 evaluation per sample.
 Single result which took 171.165 s (0.01% GC) to evaluate,
 with a memory estimate of 155.23 MiB, over 1820878 allocations.
